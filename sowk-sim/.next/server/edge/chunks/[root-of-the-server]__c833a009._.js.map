{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 16, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/appian/middleware.ts"],"sourcesContent":["import { withAuth } from 'next-auth/middleware'\nimport { NextResponse } from 'next/server'\n\nexport default withAuth(\n  function middleware(req) {\n    const token = req.nextauth.token\n    const { pathname } = req.nextUrl\n\n    // Faculty routes - only FACULTY and ADMIN\n    if (pathname.startsWith('/faculty')) {\n      if (!token || !['FACULTY', 'ADMIN'].includes(token.role as string)) {\n        return NextResponse.redirect(new URL('/login', req.url))\n      }\n    }\n\n    // Student routes - only STUDENT and ADMIN\n    if (pathname.startsWith('/student')) {\n      if (!token || !['STUDENT', 'ADMIN'].includes(token.role as string)) {\n        return NextResponse.redirect(new URL('/login', req.url))\n      }\n    }\n\n    // Admin routes - only ADMIN\n    if (pathname.startsWith('/admin')) {\n      if (!token || token.role !== 'ADMIN') {\n        return NextResponse.redirect(new URL('/login', req.url))\n      }\n    }\n\n    return NextResponse.next()\n  },\n  {\n    callbacks: {\n      authorized: ({ token, req }) => {\n        const { pathname } = req.nextUrl\n        \n        // Allow access to login page without authentication\n        if (pathname === '/login') {\n          return true\n        }\n\n        // Require authentication for all other protected routes\n        if (pathname.startsWith('/faculty') || \n            pathname.startsWith('/student') || \n            pathname.startsWith('/admin')) {\n          return !!token\n        }\n\n        // Allow access to public routes\n        return true\n      },\n    },\n  }\n)\n\nexport const config = {\n  matcher: [\n    '/faculty/:path*',\n    '/student/:path*', \n    '/admin/:path*',\n    '/login'\n  ]\n}\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AAAA;;;uCAEe,IAAA,wKAAQ,EACrB,SAAS,WAAW,GAAG;IACrB,MAAM,QAAQ,IAAI,QAAQ,CAAC,KAAK;IAChC,MAAM,EAAE,QAAQ,EAAE,GAAG,IAAI,OAAO;IAEhC,0CAA0C;IAC1C,IAAI,SAAS,UAAU,CAAC,aAAa;QACnC,IAAI,CAAC,SAAS,CAAC;YAAC;YAAW;SAAQ,CAAC,QAAQ,CAAC,MAAM,IAAI,GAAa;YAClE,OAAO,0MAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,UAAU,IAAI,GAAG;QACxD;IACF;IAEA,0CAA0C;IAC1C,IAAI,SAAS,UAAU,CAAC,aAAa;QACnC,IAAI,CAAC,SAAS,CAAC;YAAC;YAAW;SAAQ,CAAC,QAAQ,CAAC,MAAM,IAAI,GAAa;YAClE,OAAO,0MAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,UAAU,IAAI,GAAG;QACxD;IACF;IAEA,4BAA4B;IAC5B,IAAI,SAAS,UAAU,CAAC,WAAW;QACjC,IAAI,CAAC,SAAS,MAAM,IAAI,KAAK,SAAS;YACpC,OAAO,0MAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,UAAU,IAAI,GAAG;QACxD;IACF;IAEA,OAAO,0MAAY,CAAC,IAAI;AAC1B,GACA;IACE,WAAW;QACT,YAAY,CAAC,EAAE,KAAK,EAAE,GAAG,EAAE;YACzB,MAAM,EAAE,QAAQ,EAAE,GAAG,IAAI,OAAO;YAEhC,oDAAoD;YACpD,IAAI,aAAa,UAAU;gBACzB,OAAO;YACT;YAEA,wDAAwD;YACxD,IAAI,SAAS,UAAU,CAAC,eACpB,SAAS,UAAU,CAAC,eACpB,SAAS,UAAU,CAAC,WAAW;gBACjC,OAAO,CAAC,CAAC;YACX;YAEA,gCAAgC;YAChC,OAAO;QACT;IACF;AACF;AAGK,MAAM,SAAS;IACpB,SAAS;QACP;QACA;QACA;QACA;KACD;AACH"}}]
}